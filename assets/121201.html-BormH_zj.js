import{_ as i,r as t,o as p,c,a as n,b as s,d as e,e as l}from"./app-Baml9_qe.js";const r={},o={class:"custom-container tip"},d=l('<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p>',2),u={href:"https://fennay.github.io/gitlab-ci-cn/",target:"_blank",rel:"noopener noreferrer"},v=l(`<h2 id="gitlab-ci" tabindex="-1"><a class="header-anchor" href="#gitlab-ci"><span>Gitlab CI</span></a></h2><p>Gitlab-CI 是 GitLab Continuous Integration（Gitlab持续集成）的简称。 从Gitlab的8.0版本开始，gitlab就全面集成了Gitlab-CI,并且对所有项目默认开启。 只要在项目仓库的根目录添加.gitlab-ci.yml文件，并且配置了Runner（运行器），那么每一次合并请求（MR）或者push都会触发CI pipeline。</p><h2 id="gitlab-runner" tabindex="-1"><a class="header-anchor" href="#gitlab-runner"><span>Gitlab-Runner</span></a></h2><h4 id="安装gitlab-ci-multi-runner-linux" tabindex="-1"><a class="header-anchor" href="#安装gitlab-ci-multi-runner-linux"><span>安装gitlab-ci-multi-runner（linux）</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 添加yum源</span></span>
<span class="line"><span class="token function">curl</span> <span class="token parameter variable">-L</span> https://packages.gitlab.com/install/repositories/runner/gitlab-ci-multi-runner/script.rpm.sh <span class="token operator">|</span> <span class="token function">sudo</span> <span class="token function">bash</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 安装</span></span>
<span class="line">yum <span class="token function">install</span> gitlab-ci-multi-runner</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="使用-gitlab-ci-multi-runner-注册-specific-runners" tabindex="-1"><a class="header-anchor" href="#使用-gitlab-ci-multi-runner-注册-specific-runners"><span>使用 gitlab-ci-multi-runner 注册 Specific Runners</span></a></h4><p><img src="https://upload-images.jianshu.io/upload_images/4660406-23e31a052864a7a0.jpg?imageMogr2/auto-orient/strip|imageView2/2/w/1240" alt="runners.jpg"></p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">$ gitlab-ci-multi-runner register</span>
<span class="line">Running <span class="token keyword">in</span> system-mode.</span>
<span class="line"></span>
<span class="line">Please enter the gitlab-ci coordinator URL <span class="token punctuation">(</span>e.g. https://gitlab.com/<span class="token punctuation">)</span>:</span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span> 你的URL</span>
<span class="line"></span>
<span class="line">Please enter the gitlab-ci token <span class="token keyword">for</span> this runner:</span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span> 你的Token</span>
<span class="line"></span>
<span class="line">Please enter the gitlab-ci description <span class="token keyword">for</span> this runner:</span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span> 你对该runner的描述</span>
<span class="line"></span>
<span class="line">Please enter the gitlab-ci tags <span class="token keyword">for</span> this runner <span class="token punctuation">(</span>comma separated<span class="token punctuation">)</span>:</span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span> 该runner的标签</span>
<span class="line"></span>
<span class="line">Whether to run untagged builds <span class="token punctuation">[</span>true/false<span class="token punctuation">]</span>:</span>
<span class="line"><span class="token punctuation">[</span>false<span class="token punctuation">]</span>: <span class="token boolean">true</span></span>
<span class="line"></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span> 是否运行没有标记的项目（后期可以改）</span>
<span class="line"></span>
<span class="line">Whether to lock Runner to current project <span class="token punctuation">[</span>true/false<span class="token punctuation">]</span>:</span>
<span class="line"><span class="token punctuation">[</span>false<span class="token punctuation">]</span>:</span>
<span class="line"></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span> 是否锁定只运行当前项目（后期可以改）</span>
<span class="line"></span>
<span class="line">Registering runner<span class="token punctuation">..</span>. succeeded                     <span class="token assign-left variable">runner</span><span class="token operator">=</span>9e48baqx</span>
<span class="line"></span>
<span class="line">Please enter the executor: parallels, docker+machine, ssh, virtualbox, docker-ssh+machine, kubernetes, docker, docker-ssh, shell:</span>
<span class="line"></span>
<span class="line"><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span><span class="token operator">&gt;&gt;</span> 选择runner的类型（根据你的需求选择，我选择的shell，我的项目是node项目）</span>
<span class="line"></span>
<span class="line">Runner registered successfully. Feel <span class="token function">free</span> to start it, but <span class="token keyword">if</span> it&#39;s running already the config should be automatically reloaded<span class="token operator">!</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="custom-container warning"><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8v4"></path><path d="M12 16h.01"></path></g></svg><p class="custom-container-title">WARNING</p><ol><li>首先你的项目中的 <code>getlab-runner.yml</code> 文件中的命令需要的环境，你的runner所在的服务器是必须要搭好的，必须你需要执行 <code>npm install</code> 和 <code>npm run build</code> ，那你的服务器必须要有node环境；</li><li>runner的类型比较重要，你必须要清楚你需要一个什么类型的runner。比如，开始我是需要一个能够运行node项目的runner，但是网上的很多教程统一都是都选择docker，这个时候你电脑上必须要安装了docker才可以，因为这相当于在docker里面又安装了一个docker（docker in docker），所以对于我的需求来说，我选择shell就可以了；</li><li>通过Gitlab中某个项目的 <code>Settings</code> 下的 <code>CI/CD Pipelines</code> 按钮进入的页面中得到的URL和Token所注册的runner只服务于本项目，当你在其他项目的当前页面时，可以选择让这个runner为当前项目开启服务。</li></ol></div><h2 id="配置-gitlab-runner-yml" tabindex="-1"><a class="header-anchor" href="#配置-gitlab-runner-yml"><span>配置 gitlab-runner.yml</span></a></h2><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line">mage: node:9.11.1</span>
<span class="line"></span>
<span class="line">pages:</span>
<span class="line"> cache:</span>
<span class="line">   paths:</span>
<span class="line">   - node_modules/</span>
<span class="line"></span>
<span class="line"> script:</span>
<span class="line"> - cnpm <span class="token function">install</span></span>
<span class="line"> - <span class="token function">npm</span> run build</span>
<span class="line"> - <span class="token function">sudo</span> <span class="token function">rm</span> <span class="token parameter variable">-rf</span> /data/ftp/http/files/scfAdminDoc</span>
<span class="line"> - <span class="token function">sudo</span> <span class="token function">mv</span> ./scfAdminDoc /data/ftp/http/files/</span>
<span class="line"> artifacts:</span>
<span class="line">   paths:</span>
<span class="line">   - public</span>
<span class="line"> only:</span>
<span class="line"> - master</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,11),m={href:"https://fennay.github.io/gitlab-ci-cn/gitlab-ci-yaml.html",target:"_blank",rel:"noopener noreferrer"},b=l(`<h2 id="其他" tabindex="-1"><a class="header-anchor" href="#其他"><span>其他</span></a></h2><h4 id="代码推送到gitlab上之后-一直是pending状态-要等很久才pick到一个runner来执行" tabindex="-1"><a class="header-anchor" href="#代码推送到gitlab上之后-一直是pending状态-要等很久才pick到一个runner来执行"><span>代码推送到gitlab上之后，一直是pending状态，要等很久才pick到一个runner来执行</span></a></h4><p>这个现象一般发生在本机注册了多个runner，之前的都删除了，只留下一个，但是当我们在gitlab管理平台移除了某个runner的时候，并没有完全删除记录，当执行的 <code>gitlab-ci-multi-runner list</code> 的时候你会发现它仍然还在，如果需要彻底删除它，还应该这样做：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token builtin class-name">cd</span> /etc/gitlab-runner</span>
<span class="line"><span class="token function">ls</span></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 你会看到config.toml文件，打开它并删除已有的那些runner记录</span></span>
<span class="line"><span class="token function">vim</span> config.toml</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="配置node环境" tabindex="-1"><a class="header-anchor" href="#配置node环境"><span>配置node环境</span></a></h4><ol><li>下载node-v9.11.1-linux-x64.tar.xz文件</li><li>例如放在 <code>/home</code> 文件夹<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 进入所在目录，解压</span></span>
<span class="line"><span class="token function">tar</span> <span class="token parameter variable">-xvf</span> node-v9.11.1-linux-x64.tar.xz</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 重命名文件夹</span></span>
<span class="line"><span class="token function">mv</span> node-v9.11.1-linux-x64 nodejs</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 建立软链接，配置全局环境变量（源路径和目标路径为相对路径）</span></span>
<span class="line"><span class="token function">ln</span> <span class="token parameter variable">-s</span> /home/nodejs/bin/npm /usr/local/bin/</span>
<span class="line"><span class="token function">ln</span> <span class="token parameter variable">-s</span> /home/nodejs/bin/node /usr/local/bin/</span>
<span class="line"></span>
<span class="line"><span class="token comment"># 检查是否配置成功</span></span>
<span class="line"><span class="token function">node</span> <span class="token parameter variable">-v</span></span>
<span class="line"><span class="token function">npm</span> <span class="token parameter variable">-v</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h4 id="scp上上传" tabindex="-1"><a class="header-anchor" href="#scp上上传"><span>scp上上传</span></a></h4><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token comment"># 普通</span></span>
<span class="line"><span class="token function">scp</span> ./public/* root@192.168.0.226:/data/ftp/http/files/</span>
<span class="line"><span class="token function">scp</span> 源路径/源文件 用户名<span class="token punctuation">(</span>root<span class="token punctuation">)</span>@服务器IP:目标路径</span>
<span class="line"></span>
<span class="line"></span>
<span class="line"><span class="token comment"># 免密码</span></span>
<span class="line">yum <span class="token function">install</span> sshpass</span>
<span class="line">sshpass <span class="token parameter variable">-p</span> <span class="token number">111111</span> <span class="token function">scp</span> ./public/* root@192.168.0.226:/data/ftp/http/files/</span>
<span class="line">sshpass <span class="token parameter variable">-p</span> 密码 <span class="token function">scp</span> 源路径/源文件 用户名<span class="token punctuation">(</span>root<span class="token punctuation">)</span>@服务器IP:目标路径</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>如果是下载，调换顺序</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="line"><span class="token function">scp</span> root@192.168.0.226:/data/ftp/http/files/ ./public/*</span>
<span class="line"><span class="token function">scp</span> 用户名<span class="token punctuation">(</span>root<span class="token punctuation">)</span>@服务器IP:目标路径 源路径/源文件</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div>`,10),h={href:"http://recoluan.gitlab.io",target:"_blank",rel:"noopener noreferrer"},g=n("strong",null,"午后南杂",-1);function k(f,x){const a=t("ExternalLinkIcon");return p(),c("div",null,[n("div",o,[d,n("p",null,[s("在我们完成项目开发后，提交到git，当监听提交后，自动进行编译，并进行项目的部署，是不是一想就很爽，所以下面引入我们的主角 —— gitlab-CI，"),n("a",u,[s("中文文档"),e(a)]),s("。")])]),v,n("p",null,[s("具体配置见"),n("a",m,[s("文档"),e(a)])]),b,n("p",null,[s("个人博客："),n("a",h,[g,e(a)])])])}const y=i(r,[["render",k],["__file","121201.html.vue"]]),w=JSON.parse('{"path":"/blogs/other/2018/121201.html","title":"gitlab-CI 持续集成以及runner的配置简版","lang":"zh-CN","frontmatter":{"title":"gitlab-CI 持续集成以及runner的配置简版","tags":["gitlab","runner"],"categories":["other"],"date":"2018-12-12T00:00:00.000Z"},"headers":[{"level":2,"title":"Gitlab CI","slug":"gitlab-ci","link":"#gitlab-ci","children":[]},{"level":2,"title":"Gitlab-Runner","slug":"gitlab-runner","link":"#gitlab-runner","children":[]},{"level":2,"title":"配置 gitlab-runner.yml","slug":"配置-gitlab-runner-yml","link":"#配置-gitlab-runner-yml","children":[]},{"level":2,"title":"其他","slug":"其他","link":"#其他","children":[]}],"git":{"createdTime":1544632091000,"updatedTime":1590769810000,"contributors":[{"name":"reco_luan","email":"recoluan@outlook.com","commits":1}]},"filePathRelative":"blogs/other/2018/121201.md"}');export{y as comp,w as data};
