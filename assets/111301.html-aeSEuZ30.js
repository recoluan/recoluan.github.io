import{_ as l,r as o,o as p,c,a as n,b as a,d as t,e}from"./app-Baml9_qe.js";const i={},u={class:"custom-container tip"},r=e('<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><circle cx="12" cy="12" r="9"></circle><path d="M12 8h.01"></path><path d="M11 12h1v4h1"></path></g></svg><p class="custom-container-title">TIP</p>',2),d=n("br",null,null,-1),k=n("code",null,"Vue",-1),h=n("br",null,null,-1),m=n("code",null,"key",-1),g={href:"https://cn.vuejs.org/v2/guide/conditional.html#%E7%94%A8-key-%E7%AE%A1%E7%90%86%E5%8F%AF%E5%A4%8D%E7%94%A8%E7%9A%84%E5%85%83%E7%B4%A0",target:"_blank",rel:"noopener noreferrer"},v=e(`<h2 id="错误代码" tabindex="-1"><a class="header-anchor" href="#错误代码"><span>错误代码</span></a></h2><div class="language-html line-numbers-mode" data-highlighter="prismjs" data-ext="html" data-title="html"><pre class="language-html"><code><span class="line"><span class="token comment">&lt;!-- \b代码块1 --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>授信申请状态<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-if</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>type<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span> <span class="token attr-name">slot-scope</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>scope<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span>{{ scope.row.data2 | format }}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token comment">&lt;!-- \b代码块2 --&gt;</span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>el-table-column</span> <span class="token attr-name">prop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>data1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">label</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>联系人手机<span class="token punctuation">&quot;</span></span> <span class="token attr-name">v-else</span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>el-table-column</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="报错分析" tabindex="-1"><a class="header-anchor" href="#报错分析"><span>报错分析</span></a></h2><p>\b如果优先显示代码块1，然后改变type值，显示代码块2，这时Vue为了快速渲染页面，会优先拿代码1的代码渲染到代码块2的位置，但是代码块2并没有定义 <code>slot-scope</code> ，这时就会报标题错误。</p><h2 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案"><span>解决方案</span></a></h2><ol><li>给使用 <code>v-if</code> 和 <code>v-else</code> 的地方加上 <code>key</code></li><li>将\b\b <code>v-if</code> 和 <code>v-else</code> \b换成 <code>v-show</code></li></ol>`,6),_={href:"http://recoluan.gitlab.io",target:"_blank",rel:"noopener noreferrer"},b=n("strong",null,"午后南杂",-1);function f(x,E){const s=o("ExternalLinkIcon");return p(),c("div",null,[n("div",u,[r,n("p",null,[a("出错缘由："),d,k,a(" 会尽可能高效地渲染元素，通常会复用已有元素而不是从头开始渲染。"),h,a(" 这样也不总是符合实际需求，所以 Vue 为你提供了一种方式来表达“这两个元素是完全独立的，不要复用它们”。只需添加一个具有唯一值的 "),m,a(" 属性即可。见"),n("a",g,[a("详情"),t(s)])])]),v,n("p",null,[a("个人博客："),n("a",_,[b,t(s)])])])}const w=l(i,[["render",f],["__file","111301.html.vue"]]),y=JSON.parse('{"path":"/blogs/frontEnd/2018/111301.html","title":"Vue中key值的作用","lang":"zh-CN","frontmatter":{"title":"Vue中key值的作用","date":"2018-11-13T00:00:00.000Z","tags":["vue"],"categories":["frontEnd"]},"headers":[{"level":2,"title":"错误代码","slug":"错误代码","link":"#错误代码","children":[]},{"level":2,"title":"报错分析","slug":"报错分析","link":"#报错分析","children":[]},{"level":2,"title":"解决方案","slug":"解决方案","link":"#解决方案","children":[]}],"git":{"createdTime":1542091496000,"updatedTime":1590769810000,"contributors":[{"name":"reco_luan","email":"recoluan@outlook.com","commits":1}]},"filePathRelative":"blogs/frontEnd/2018/111301.md"}');export{w as comp,y as data};
